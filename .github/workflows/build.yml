name: Build Zapret Proxy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Generate icon
        run: python src/generate_icon.py
      - name: Validate icon
        run: python src/validate_icon.py
      - name: Install PyInstaller
        run: pip install pyinstaller
      - name: Install Pillow
        run: pip install Pillow
      - name: Build exe
        run: pyinstaller zapret_proxy_simple.spec

      - name: Generate checksums
        run: |
          sha256sum dist/ZapretProxySetup.exe dist/zapret_proxy.exe > checksums.txt || true
          cat checksums.txt || true
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: zapret_proxy_dist
          path: dist/
      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: zapret_proxy_installer
          path: dist/ZapretProxySetup.exe
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release ${{ github.run_number }}"
          tag_name: "v${{ github.run_number }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload checksums to Release
        run: |
          gh release upload "v${{ github.run_number }}" checksums.txt --repo ${{ github.repository }} --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/ZapretProxySetup.exe
            dist/zapret_proxy.exe
            src/config.json
            icon.ico
            README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Generate icon
        run: python src/generate_icon.py
      - name: Validate icon
        run: python src/validate_icon.py
      - name: Install PyInstaller
        run: pip install pyinstaller
      - name: Install Pillow
        run: pip install Pillow
      - name: Install Inno Setup (choco)
        if: runner.os == 'Windows'
        run: choco install innosetup -y
      - name: Build exe (Windows)
        run: pyinstaller zapret_proxy_simple.spec
      - name: Build Inno Setup installer
        if: runner.os == 'Windows'
        run: |
          $iscc = "C:\\Program Files (x86)\\Inno Setup 6\\ISCC.exe"
          if (Test-Path $iscc) { & $iscc zapret_proxy_installer.iss } else { Write-Error "ISCC not found at $iscc"; exit 1 }

      - name: Generate checksums
        run: |
          sha256sum dist/ZapretProxySetup.exe dist/zapret_proxy.exe > checksums.txt || true
          cat checksums.txt || true
      - name: Upload Windows exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: zapret_proxy_simple_win
          path: dist/zapret_proxy.exe
      - name: Upload only Windows exe as artifact
        uses: actions/upload-artifact@v4
        with:
          name: zapret_proxy_simple_exe
          path: dist/zapret_proxy.exe
      - name: Upload Windows exe to Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/zapret_proxy.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Windows installer to Release
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/ZapretProxySetup.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload checksums to Release (Windows)
        if: runner.os == 'Windows'
        run: |
          gh release upload "v${{ github.run_number }}" checksums.txt --repo ${{ github.repository }} --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
